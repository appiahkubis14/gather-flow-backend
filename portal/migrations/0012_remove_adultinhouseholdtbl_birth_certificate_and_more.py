# Generated by Django 5.1.6 on 2025-03-03 13:53

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("portal", "0011_alter_childinhouseholdtbl_child_can_be_surveyed_and_more"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="adultinhouseholdtbl",
            name="birth_certificate",
        ),
        migrations.RemoveField(
            model_name="adultinhouseholdtbl",
            name="country_origin",
        ),
        migrations.RemoveField(
            model_name="adultinhouseholdtbl",
            name="country_origin_other",
        ),
        migrations.RemoveField(
            model_name="adultinhouseholdtbl",
            name="full_names",
        ),
        migrations.RemoveField(
            model_name="adultinhouseholdtbl",
            name="gender",
        ),
        migrations.RemoveField(
            model_name="adultinhouseholdtbl",
            name="main_work",
        ),
        migrations.RemoveField(
            model_name="adultinhouseholdtbl",
            name="main_work_other",
        ),
        migrations.RemoveField(
            model_name="adultinhouseholdtbl",
            name="nationality",
        ),
        migrations.RemoveField(
            model_name="adultinhouseholdtbl",
            name="relationship",
        ),
        migrations.RemoveField(
            model_name="adultinhouseholdtbl",
            name="relationship_other",
        ),
        migrations.RemoveField(
            model_name="adultinhouseholdtbl",
            name="year_birth",
        ),
        migrations.CreateModel(
            name="HouseholdMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "full_name",
                    models.CharField(
                        help_text="Enter the full name of the household member.",
                        max_length=200,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Name must contain only letters and spaces.",
                                regex="^[A-Za-z\\s]+$",
                            )
                        ],
                        verbose_name="Full Name",
                    ),
                ),
                (
                    "relationship",
                    models.CharField(
                        choices=[
                            ("Husband/Wife", "Husband/Wife"),
                            ("Son/Daughter", "Son/Daughter"),
                            ("Brother/Sister", "Brother/Sister"),
                            (
                                "Son-in-law/Daughter-in-law",
                                "Son-in-law/Daughter-in-law",
                            ),
                            ("Grandson/Granddaughter", "Grandson/Granddaughter"),
                            ("Niece/Nephew", "Niece/Nephew"),
                            ("Cousin", "Cousin"),
                            ("Worker's Family", "Worker's Family"),
                            ("Worker", "Worker"),
                            ("Father/Mother", "Father/Mother"),
                            ("Other", "Other (specify)"),
                        ],
                        max_length=50,
                        verbose_name="Relationship to the respondent",
                    ),
                ),
                (
                    "relationship_other",
                    models.CharField(
                        blank=True,
                        help_text="If 'Other' is selected, please specify.",
                        max_length=100,
                        verbose_name="Specify relationship (if Other)",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("Male", "Male"), ("Female", "Female")],
                        max_length=6,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "nationality",
                    models.CharField(
                        choices=[
                            ("Ghanaian", "Ghanaian"),
                            ("Non Ghanaian", "Non Ghanaian"),
                        ],
                        max_length=20,
                        verbose_name="Nationality",
                    ),
                ),
                (
                    "country_origin",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Burkina Faso", "Burkina Faso"),
                            ("Mali", "Mali"),
                            ("Guinea", "Guinea"),
                            ("Ivory Coast", "Ivory Coast"),
                            ("Liberia", "Liberia"),
                            ("Togo", "Togo"),
                            ("Benin", "Benin"),
                            ("Niger", "Niger"),
                            ("Nigeria", "Nigeria"),
                            ("Other", "Other (specify)"),
                        ],
                        max_length=50,
                        verbose_name="Country of origin (if Non Ghanaian)",
                    ),
                ),
                (
                    "country_origin_other",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Specify country of origin (if Other)",
                    ),
                ),
                ("year_birth", models.IntegerField(verbose_name="Year of birth")),
                (
                    "birth_certificate",
                    models.CharField(
                        choices=[("Yes", "Yes"), ("No", "No")],
                        max_length=3,
                        verbose_name="Has birth certificate?",
                    ),
                ),
                (
                    "main_work",
                    models.CharField(
                        choices=[
                            ("Farmer_cocoa", "Farmer (cocoa)"),
                            ("Farmer_coffee", "Farmer (coffee)"),
                            ("Farmer_other", "Farmer (other)"),
                            ("Merchant", "Merchant"),
                            ("Student", "Student"),
                            ("Other", "Other"),
                            ("No_activity", "No activity"),
                        ],
                        max_length=30,
                        verbose_name="Main work/occupation",
                    ),
                ),
                (
                    "main_work_other",
                    models.CharField(
                        blank=True,
                        help_text="If 'Other' is selected, please specify.",
                        max_length=100,
                        verbose_name="Specify main work (if Other)",
                    ),
                ),
                (
                    "adult_group_1",
                    models.ForeignKey(
                        blank=True,
                        help_text="Link to the corresponding AdultInHouseholdTbl record if this member is an adult.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members",
                        to="portal.adultinhouseholdtbl",
                    ),
                ),
                (
                    "adult_group_2",
                    models.ForeignKey(
                        blank=True,
                        help_text="Link to the corresponding AdultInHouseholdTbl record if this member is an adult.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members",
                        to="portal.childinhouseholdtbl",
                    ),
                ),
                (
                    "cover",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="household_members",
                        to="portal.cover_tbl",
                    ),
                ),
            ],
        ),
    ]
